***************
*** 184,196 ****
  static void focus(Client *c);
  static void focusin(XEvent *e);
  static void focusmon(const Arg *arg);
- static void focusstack(const Arg *arg);
  static Atom getatomprop(Client *c, Atom prop);
  static int getrootptr(int *x, int *y);
  static long getstate(Window w);
  static int gettextprop(Window w, Atom atom, char *text, unsigned int size);
  static void grabbuttons(Client *c, int focused);
  static void grabkeys(void);
  static void incnmaster(const Arg *arg);
  static void keypress(XEvent *e);
  static void killclient(const Arg *arg);
--- 188,204 ----
  static void focus(Client *c);
  static void focusin(XEvent *e);
  static void focusmon(const Arg *arg);
+ static void focusstackvis(const Arg *arg);
+ static void focusstackhid(const Arg *arg);
+ static void focusstack(int inc, int vis);
  static Atom getatomprop(Client *c, Atom prop);
  static int getrootptr(int *x, int *y);
  static long getstate(Window w);
  static int gettextprop(Window w, Atom atom, char *text, unsigned int size);
  static void grabbuttons(Client *c, int focused);
  static void grabkeys(void);
+ static void hide(const Arg *arg);
+ static void hidewin(Client *c);
  static void incnmaster(const Arg *arg);
  static void keypress(XEvent *e);
  static void killclient(const Arg *arg);
***************
*** 473,482 ****
  			arg.ui = 1 << i;
  		} else if (ev->x < x + blw)
  			click = ClkLtSymbol;
- 		else if (ev->x > selmon->ww - (int)TEXTW(stext))
  			click = ClkStatusText;
- 		else
- 			click = ClkWinTitle;
  	} else if ((c = wintoclient(ev->window))) {
  		focus(c);
  		restack(selmon);
--- 485,509 ----
  			arg.ui = 1 << i;
  		} else if (ev->x < x + blw)
  			click = ClkLtSymbol;
+ 		/* 2px right padding */
+ 		else if (ev->x > selmon->ww - TEXTW(stext) + lrpad - 2)
  			click = ClkStatusText;
+ 		else {
+ 			x += blw;
+ 			c = m->clients;
+ 
+ 			if (c) {
+ 				do {
+ 					if (!ISVISIBLE(c))
+ 						continue;
+ 					else
+ 						x +=(1.0 / (double)m->bt) * m->btw;
+ 				} while (ev->x > x && (c = c->next));
+ 
+ 				click = ClkWinTitle;
+ 				arg.v = c;
+ 			}
+ 		}
  	} else if ((c = wintoclient(ev->window))) {
  		focus(c);
  		restack(selmon);
***************
*** 738,744 ****
  void
  drawbar(Monitor *m)
  {
- 	int x, w, tw = 0;
  	int boxs = drw->fonts->h / 9;
  	int boxw = drw->fonts->h / 6 + 2;
  	unsigned int i, occ = 0, urg = 0;
--- 765,771 ----
  void
  drawbar(Monitor *m)
  {
+ 	int x, w, tw = 0, n = 0, scm;
  	int boxs = drw->fonts->h / 9;
  	int boxw = drw->fonts->h / 6 + 2;
  	unsigned int i, occ = 0, urg = 0;
***************
*** 842,857 ****
  	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);
  
  	if ((w = m->ww - tw - x) > bh) {
- 		if (m->sel) {
- 			drw_setscheme(drw, scheme[m == selmon ? SchemeSel : SchemeNorm]);
- 			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
- 			if (m->sel->isfloating)
- 				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
  		} else {
  			drw_setscheme(drw, scheme[SchemeNorm]);
  			drw_rect(drw, x, 0, w, bh, 1, 1);
  		}
  	}
  	drw_map(drw, m->barwin, 0, 0, m->ww, bh);
  }
  
--- 871,906 ----
  	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);
  
  	if ((w = m->ww - tw - x) > bh) {
+ 		if (n > 0) {
+ 			int remainder = w % n;
+ 			int tabw = (1.0 / (double)n) * w + 1;
+ 			for (c = m->clients; c; c = c->next) {
+ 				if (!ISVISIBLE(c))
+ 					continue;
+ 				if (m->sel == c)
+ 					scm = SchemeSel;
+ 				else if (HIDDEN(c))
+ 					scm = SchemeHid;
+ 				else
+ 					scm = SchemeNorm;
+ 				drw_setscheme(drw, scheme[scm]);
+ 
+ 				if (remainder >= 0) {
+ 					if (remainder == 0) {
+ 						tabw--;
+ 					}
+ 					remainder--;
+ 				}
+ 				drw_text(drw, x, 0, tabw, bh, lrpad / 2, c->name, 0);
+ 				x += tabw;
+ 			}
  		} else {
  			drw_setscheme(drw, scheme[SchemeNorm]);
  			drw_rect(drw, x, 0, w, bh, 1, 1);
  		}
  	}
+ 	m->bt = n;
+ 	m->btw = w;
  	drw_map(drw, m->barwin, 0, 0, m->ww, bh);
  }
  
